import{r as o,j as e,T as X,u as C,X as Q,M as ee,H as T,P as k,S as w,N as b,a as F,b as te,d as se,U as S,C as K,e as W,F as ne,B as ie,A as E,f as z,h as M,i as re,k as ae,l as V,m as le,n as D,o as oe,K as ce,p as de,q as he}from"./react-vendor-DTi9HD74.js";import{N as ue,i as me,B as pe}from"./vendor-D1sSvC90.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))a(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&a(c)}).observe(document,{childList:!0,subtree:!0});function n(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(i){if(i.ep)return;i.ep=!0;const r=n(i);fetch(i.href,r)}})();class ge extends o.Component{constructor(s){super(s),this.state={hasError:!1,error:null,errorInfo:null}}static getDerivedStateFromError(){return{hasError:!0}}componentDidCatch(s,n){this.setState({error:s,errorInfo:n}),console.error("Error caught by ErrorBoundary:",s,n)}render(){var s;return this.state.hasError?e.jsx("div",{className:"error-boundary",children:e.jsxs("div",{className:"error-content",children:[e.jsx(X,{className:"error-icon",size:48}),e.jsx("h1",{children:"Oops, etwas ist schiefgelaufen"}),e.jsx("p",{children:"Es tut uns leid, aber es ist ein Fehler aufgetreten. Bitte laden Sie die Seite neu."}),e.jsx("button",{onClick:()=>window.location.reload(),className:"refresh-button",children:"Seite neu laden"}),this.state.error&&e.jsxs("details",{className:"error-details",children:[e.jsx("summary",{children:"Technische Details"}),e.jsx("pre",{children:this.state.error.toString()}),e.jsx("pre",{children:(s=this.state.errorInfo)==null?void 0:s.componentStack})]})]})}):this.props.children}}const fe=[{id:"home",label:"Startseite"},{id:"nip1",label:"NIP-01"},{id:"nip2",label:"NIP-02"}],xe=({setActivePage:t,activePage:s})=>{const{i18n:n}=C(),[a,i]=o.useState(!1),r=u=>{n.changeLanguage(u)},c=()=>{i(!a)},g=u=>{t(u),i(!1),window.scrollTo({top:0,behavior:"smooth"})};return e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"language-switcher",children:[e.jsx("button",{onClick:()=>r("de"),children:"DE"}),e.jsx("button",{onClick:()=>r("en"),children:"EN"})]}),a&&e.jsx("div",{className:"blur-background",onClick:c}),e.jsxs("nav",{className:"navbar",children:[e.jsx("button",{className:"menu-icon",onClick:c,"aria-label":"Toggle menu",children:a?e.jsx(Q,{size:24}):e.jsx(ee,{size:24})}),e.jsx("div",{className:"navbar-container",children:e.jsx("ul",{className:a?"show":"",children:fe.map(({id:u,label:m})=>e.jsx("li",{onClick:()=>g(u),className:s===u?"active":"",children:m},u))})})]})]})},_=({id:t,title:s,icon:n,children:a,defaultExpanded:i=!1})=>{const[r,c]=o.useState(i);return e.jsxs("section",{className:"sl_content-section",id:t,children:[e.jsxs("button",{className:"sl_section-header sl_interactive",onClick:()=>c(!r),"aria-expanded":r,"aria-controls":`section-content-${t}`,children:[n,e.jsx("h2",{children:s}),r?e.jsx(K,{className:"sl_transition-transform"}):e.jsx(W,{className:"sl_transition-transform"})]}),r&&e.jsx("div",{className:"home-section-content",id:`section-content-${t}`,role:"region","aria-labelledby":t,children:a})]})},ve=({t})=>e.jsxs("div",{className:"home-protocol-concepts-container",children:[e.jsxs("div",{className:"home-concepts-grid",children:[e.jsxs("div",{className:"home-concept-card",children:[e.jsxs("div",{className:"home-concept-card-header",children:[e.jsx(ne,{size:24}),e.jsx("h4",{children:"Event Kinds"})]}),e.jsxs("ul",{className:"home-concept-list",children:[e.jsx("li",{children:"Numerische Identifikatoren für Ereignistypen"}),e.jsx("li",{children:"Praktisch für Abfragen und Filterung von Events"}),e.jsx("li",{children:"Ermöglichen gezielte Suche nach bestimmten Datentypen"}),e.jsx("li",{children:"Teil der technischen Event-Struktur"}),e.jsx("li",{children:"Helfen Relays bei der effizienten Verarbeitung"})]}),e.jsx("div",{className:"home-concept-example",children:"Beispiel: Kind 1 = öffentliche Textnachricht"})]}),e.jsxs("div",{className:"home-concept-card",children:[e.jsxs("div",{className:"home-concept-card-header",children:[e.jsx(ie,{size:24}),e.jsx("h4",{children:"NIPs"})]}),e.jsxs("ul",{className:"home-concept-list",children:[e.jsx("li",{children:"Entwicklungsrichtlinien und Standards"}),e.jsx("li",{children:"Definieren neue Protokoll-Funktionen"}),e.jsx("li",{children:"Sichern Kompatibilität zwischen Clients/Relays"}),e.jsx("li",{children:"Dokumentieren Best Practices"}),e.jsx("li",{children:"Ermöglichen kontrollierte Evolution des Protokolls"})]}),e.jsx("div",{className:"home-concept-example",children:"Beispiel: NIP-01 definiert das Basisprotokoll"})]})]}),e.jsxs("div",{className:"home-event-kinds-ranges",children:[e.jsx("h3",{children:t("event_kinds.ranges.title")}),e.jsxs("div",{className:"home-ranges-grid",children:[e.jsxs("div",{className:"home-range-card",children:[e.jsx("div",{className:"home-range-number",children:"0-999"}),e.jsx("p",{className:"home-range-description",children:t("event_kinds.ranges.regular")})]}),e.jsxs("div",{className:"home-range-card",children:[e.jsx("div",{className:"home-range-number",children:"1000-9999"}),e.jsx("p",{className:"home-range-description",children:t("event_kinds.ranges.regular_replaceable")})]}),e.jsxs("div",{className:"home-range-card",children:[e.jsx("div",{className:"home-range-number",children:"10000-19999"}),e.jsx("p",{className:"home-range-description",children:t("event_kinds.ranges.ephemeral")})]}),e.jsxs("div",{className:"home-range-card",children:[e.jsx("div",{className:"home-range-number",children:"20000-29999"}),e.jsx("p",{className:"home-range-description",children:t("event_kinds.ranges.parameterized")})]})]})]}),e.jsx("div",{className:"home-concepts-summary",children:e.jsxs("p",{children:[e.jsx("strong",{children:"Zusammenfassend:"})," Während Event Kinds die technische Kategorisierung und Filterung von Ereignissen ermöglichen, bieten NIPs den Rahmen für die standardisierte Weiterentwicklung des Protokolls. Diese Kombination ermöglicht es Nostr, flexibel und dennoch kompatibel zu bleiben."]})})]}),A=()=>{const{t,ready:s}=C("home");return s?e.jsxs("article",{children:[e.jsxs("header",{className:"sl_page-header",children:[e.jsx("h1",{className:"sl_page-title",children:t("welcome")}),e.jsx("p",{className:"sl_page-intro",children:t("nostr_intro")})]}),e.jsxs("div",{children:[e.jsx(_,{id:"protocol-basics",title:t("protocol_basics"),icon:e.jsx(T,{className:"sl_section-icon",size:24}),defaultExpanded:!0,children:e.jsxs("div",{className:"home-protocol-basics-container",children:[e.jsx("p",{className:"home-protocol-basics-intro",children:t("protocol_basics_intro")}),e.jsxs("div",{className:"home-event-structure-container",children:[e.jsx("h3",{className:"home-event-structure-heading",children:t("event_structure.title")}),e.jsx("div",{className:"home-code-example-container",children:e.jsx("pre",{className:"home-code-example-pre",children:e.jsxs("code",{children:[`{
  `,e.jsx("span",{className:"home-code-example-key",children:'"id"'}),`: "...",        // ${t("event_structure.id_desc")}
  `,e.jsx("span",{className:"home-code-example-key",children:'"pubkey"'}),`: "...",    // ${t("event_structure.pubkey_desc")}
  `,e.jsx("span",{className:"home-code-example-key",children:'"created_at"'}),`: ...,  // ${t("event_structure.created_at_desc")}
  `,e.jsx("span",{className:"home-code-example-key",children:'"kind"'}),`: ...,        // ${t("event_structure.kind_desc")}
  `,e.jsx("span",{className:"home-code-example-key",children:'"tags"'}),`: [...],      // ${t("event_structure.tags_desc")}
  `,e.jsx("span",{className:"home-code-example-key",children:'"content"'}),`: "...",   // ${t("event_structure.content_desc")}
  `,e.jsx("span",{className:"home-code-example-key",children:'"sig"'}),`: "..."        // ${t("event_structure.sig_desc")}
}`]})})})]})]})}),e.jsx(_,{id:"protocol-concepts",title:t("protocol_concepts.title"),icon:e.jsx(k,{className:"sl_section-icon",size:24}),children:e.jsx(ve,{t})}),e.jsx(_,{id:"relays",title:t("relays_section.title"),icon:e.jsx(w,{className:"sl_section-icon",size:24}),children:e.jsxs("div",{className:"home-relays-container",children:[e.jsx("p",{className:"home-relays-intro",children:t("relays_section.intro")}),e.jsxs("div",{className:"home-relays-features-grid",children:[e.jsxs("div",{className:"home-relay-feature-card",children:[e.jsxs("div",{className:"home-relay-feature-header",children:[e.jsx("div",{className:"home-relay-feature-icon",children:e.jsx(b,{size:24})}),e.jsx("h4",{className:"home-relay-feature-title",children:t("relays_section.features.decentralized.title")})]}),e.jsx("p",{className:"home-relay-feature-description",children:t("relays_section.features.decentralized.description")}),e.jsx("div",{className:"home-relay-status",children:"Active Nodes"})]}),e.jsxs("div",{className:"home-relay-feature-card",children:[e.jsxs("div",{className:"home-relay-feature-header",children:[e.jsx("div",{className:"home-relay-feature-icon",children:e.jsx(F,{size:24})}),e.jsx("h4",{className:"home-relay-feature-title",children:t("relays_section.features.redundant.title")})]}),e.jsx("p",{className:"home-relay-feature-description",children:t("relays_section.features.redundant.description")}),e.jsx("div",{className:"home-relay-status",children:"Backup Ready"})]}),e.jsxs("div",{className:"home-relay-feature-card",children:[e.jsxs("div",{className:"home-relay-feature-header",children:[e.jsx("div",{className:"home-relay-feature-icon",children:e.jsx(te,{size:24})}),e.jsx("h4",{className:"home-relay-feature-title",children:t("relays_section.features.flexible.title")})]}),e.jsx("p",{className:"home-relay-feature-description",children:t("relays_section.features.flexible.description")}),e.jsx("div",{className:"home-relay-status",children:"Configurable"})]}),e.jsxs("div",{className:"home-relay-feature-card",children:[e.jsxs("div",{className:"home-relay-feature-header",children:[e.jsx("div",{className:"home-relay-feature-icon",children:e.jsx(se,{size:24})}),e.jsx("h4",{className:"home-relay-feature-title",children:t("relays_section.features.scalable.title")})]}),e.jsx("p",{className:"home-relay-feature-description",children:t("relays_section.features.scalable.description")}),e.jsx("div",{className:"home-relay-status",children:"High Performance"})]})]})]})}),e.jsx(_,{id:"clients",title:t("clients_section.title"),icon:e.jsx(S,{className:"sl_section-icon",size:24}),children:e.jsxs("div",{className:"home-clients-container",children:[e.jsx("p",{className:"home-clients-intro",children:t("clients_section.intro")}),e.jsxs("div",{className:"home-client-types-grid",children:[e.jsxs("div",{className:"home-client-type-card home-client-type-web",children:[e.jsx("div",{className:"home-client-type-icon",children:e.jsx(k,{size:24})}),e.jsx("h4",{className:"home-client-type-title",children:t("clients_section.types.web.title")}),e.jsx("p",{className:"home-client-type-description",children:t("clients_section.types.web.description")}),e.jsxs("div",{className:"home-client-features",children:[e.jsxs("span",{className:"home-client-feature-tag",children:[e.jsx(k,{size:14}),"Browser-basiert"]}),e.jsxs("span",{className:"home-client-feature-tag",children:[e.jsx(b,{size:14}),"Überall verfügbar"]})]})]}),e.jsxs("div",{className:"home-client-type-card home-client-type-mobile",children:[e.jsx("div",{className:"home-client-type-icon",children:e.jsx(S,{size:24})}),e.jsx("h4",{className:"home-client-type-title",children:t("clients_section.types.mobile.title")}),e.jsx("p",{className:"home-client-type-description",children:t("clients_section.types.mobile.description")}),e.jsxs("div",{className:"home-client-features",children:[e.jsxs("span",{className:"home-client-feature-tag",children:[e.jsx(S,{size:14}),"iOS & Android"]}),e.jsxs("span",{className:"home-client-feature-tag",children:[e.jsx(w,{size:14}),"Push Support"]})]})]}),e.jsxs("div",{className:"home-client-type-card home-client-type-desktop",children:[e.jsx("div",{className:"home-client-type-icon",children:e.jsx(w,{size:24})}),e.jsx("h4",{className:"home-client-type-title",children:t("clients_section.types.desktop.title")}),e.jsx("p",{className:"home-client-type-description",children:t("clients_section.types.desktop.description")}),e.jsxs("div",{className:"home-client-features",children:[e.jsxs("span",{className:"home-client-feature-tag",children:[e.jsx(w,{size:14}),"Volle Kontrolle"]}),e.jsxs("span",{className:"home-client-feature-tag",children:[e.jsx(b,{size:14}),"Offline Support"]})]})]})]})]})}),e.jsx(_,{id:"summary",title:t("summary.title"),icon:e.jsx(b,{className:"sl_section-icon",size:24}),children:e.jsx("div",{className:"home-summary-container",children:e.jsxs("div",{className:"home-summary-content",children:[e.jsxs("h2",{className:"home-summary-title",children:[e.jsx(b,{size:32}),t("summary.title")]}),e.jsx("div",{className:"home-summary-text",children:t("summary.text").split(" ").map((n,a)=>["Nostr","NIPs","Protokoll","dezentral","Relays","Clients"].includes(n)?e.jsxs("span",{className:"home-summary-keyword",children:[n," "]},a):n+" ")}),e.jsxs("div",{className:"home-summary-info-box",children:[e.jsx(k,{size:24}),e.jsx("p",{children:t("summary.info_box")})]})]})})})]})]}):e.jsxs("div",{children:[e.jsx("div",{}),e.jsx("p",{children:"Loading..."})]})},Ne=({children:t,variant:s="default",className:n,...a})=>e.jsx("div",{role:"alert",className:`alert ${s} ${n||""}`,...a,children:t}),ye=({children:t,className:s,...n})=>e.jsx("h5",{className:`alert-title ${s||""}`,...n,children:t}),be=({children:t,className:s,...n})=>e.jsx("div",{className:`alert-description ${s||""}`,...n,children:t}),_e=["wss://pablof7z.nostr1.com","wss://offchain.pub","wss://relay.f7z.io","wss://relay.damus.io","wss://relay.snort.social","wss://offchain.pub/","wss://nostr.mom","wss://nostr-pub.wellorder.net","wss://purplepag.es","wss://brb.io/"],O=({onConnect:t})=>(o.useEffect(()=>{(async()=>{const n=new ue({explicitRelayUrls:[..._e],enableOutboxModel:!1});await n.connect(6e3),t(n),console.log("Connected to relays")})()},[t]),null),je=({ndk:t})=>{const[s,n]=o.useState(!1),[a,i]=o.useState(!1),[r,c]=o.useState(null),g=async()=>{if(t)try{i(!0),c(null),await t.connect(),n(!0)}catch(d){c("Verbindung fehlgeschlagen. Bitte versuchen Sie es erneut."),console.error("Connection error:",d)}finally{i(!1)}},u=async()=>{if(!(!t||!t.pool))try{const d=Array.from(t.pool.relays.values());await Promise.all(d.map(async p=>{try{await p.disconnect()}catch(v){console.error(`Failed to disconnect from ${p.url}:`,v)}})),n(!1)}catch(d){console.error("Disconnect error:",d)}};o.useEffect(()=>{if(!(t!=null&&t.pool))return;const d=()=>{const v=Array.from(t.pool.relays.values()).some(f=>f.status===1);n(v)},p=()=>{const v=Array.from(t.pool.relays.values()).some(f=>f.status===1);n(v)};return t.pool.on("relay:connect",d),t.pool.on("relay:disconnect",p),d(),()=>{t.pool.removeListener("relay:connect",d),t.pool.removeListener("relay:disconnect",p)}},[t]);const m=()=>t!=null&&t.pool?Array.from(t.pool.relays.values()).filter(d=>d.status===1):[];return e.jsxs("div",{className:"relay-controller",children:[e.jsxs("div",{className:"status-display",children:[e.jsxs("div",{className:"status-indicator",children:[a?e.jsx(E,{className:"animate-spin text-yellow-500"}):s?e.jsx(z,{className:"text-green-500"}):e.jsx(M,{className:"text-red-500"}),e.jsx("span",{children:a?"Verbindung wird hergestellt...":s?"Verbunden":"Nicht verbunden"})]}),r&&e.jsx("div",{className:"error-message",children:r})]}),e.jsxs("div",{className:"control-buttons",children:[e.jsxs("button",{onClick:g,disabled:s||a,className:"connect-button",children:[e.jsx(re,{className:s?"text-green-500":"text-gray-500"}),"Verbinden"]}),e.jsxs("button",{onClick:u,disabled:!s||a,className:"disconnect-button",children:[e.jsx(ae,{className:s?"text-gray-500":"text-red-500"}),"Trennen"]})]}),s&&e.jsxs("div",{className:"relay-list",children:[e.jsxs("h4",{children:["Verbundene Relays (",m().length,"):"]}),e.jsx("ul",{children:m().map(d=>e.jsxs("li",{children:[e.jsx(z,{className:"text-green-500"}),new URL(d.url).hostname]},d.url))})]})]})},ke=(t,s)=>{try{const n=t(s,{returnObjects:!0});return Array.isArray(n)?n:[]}catch(n){return console.warn(`Translation error for key ${s}:`,n),[]}},R=(t,s)=>{try{const n=t(s,{returnObjects:!0});return typeof n=="object"&&n!==null?n:{}}catch(n){return console.warn(`Translation error for key ${s}:`,n),{}}},j=({id:t,title:s,icon:n,children:a,isExpanded:i,onToggle:r})=>e.jsxs("section",{className:"sl_content-section",children:[e.jsxs("button",{className:"sl_section-header sl_interactive",onClick:r,"aria-expanded":i,"aria-controls":`section-content-${t}`,children:[e.jsx("span",{className:"sl_section-icon",children:n}),e.jsx("h2",{children:s}),i?e.jsx(K,{className:"transition-transform"}):e.jsx(W,{className:"transition-transform"})]}),i&&e.jsx("div",{className:"sl_section-content",id:`section-content-${t}`,role:"region","aria-labelledby":t,children:a})]}),B="86885d03218abe92f1800fb2f0a306535710111d60e8c9aafd0179db11963ed7",we=()=>{const{t}=C("nip1"),[s,n]=o.useState(null),[a,i]=o.useState(null),[r,c]=o.useState(""),[g,u]=o.useState(!1),[m,d]=o.useState(null),[p,v]=o.useState("overview"),[f,x]=o.useState(null),N=o.useCallback(l=>{v(p===l?"":l)},[p]),H=o.useCallback(()=>{c(B),d(null),x(null)},[]),L=l=>/^[0-9a-f]{64}$/.test(l),$=l=>({...l,created_at:l.created_at,tags:l.tags.map(h=>h.map(y=>typeof y=="string"?y:JSON.stringify(y)))}),U=async l=>{if(!a){d(t("errors.no_relay_connection")),x(!1);return}if(!L(l)){d(t("validation_errors.invalid_id")),x(!1);return}u(!0),d(null),x(null);try{const h=await a.fetchEvent(l);if(h){const y=$(h.rawEvent());n(y),x(!0)}else d(t("errors.event_not_found")),x(!1)}catch(h){console.error("Fetch error:",h),d(h instanceof Error?h.message:t("errors.fetch_failed")),x(!1)}finally{u(!1)}},G=async l=>{l.preventDefault(),await U(r)},Z=o.useCallback(()=>{c(""),d(null),x(null),n(null)},[]),q=o.useCallback(()=>e.jsxs("div",{className:"overview",children:[e.jsx("p",{className:"description",children:t("sections.overview.description")}),e.jsx("ul",{className:"overview-list",children:ke(t,"sections.overview.points").map((l,h)=>e.jsx("li",{children:l},h))})]}),[t]),J=o.useCallback(()=>e.jsxs("div",{className:"event-structure",children:[e.jsx("p",{className:"description",children:t("sections.event_structure.description")}),e.jsx("div",{className:"fields-grid",children:Object.entries(R(t,"sections.event_structure.fields")).map(([l,h])=>e.jsxs("div",{className:"field-card",children:[e.jsxs("div",{className:"field-header",children:[Ee(l),e.jsx("h3",{children:h.title})]}),e.jsx("p",{className:"field-description",children:h.description}),h.technical&&e.jsx("div",{className:"technical-note",children:e.jsx("code",{children:h.technical})})]},l))})]}),[t]),Y=o.useCallback(()=>e.jsxs("div",{className:"relay-communication",children:[e.jsx("p",{className:"description",children:t("sections.relay_communication.description")}),e.jsxs("div",{className:"message-types",children:[e.jsx("h3",{children:t("sections.relay_communication.messages.types.title")}),e.jsx("div",{className:"types-grid",children:Object.entries(R(t,"sections.relay_communication.messages.types")).filter(([l])=>l!=="title").map(([l,h])=>e.jsxs("div",{className:"type-card",children:[e.jsx("h4",{children:l}),e.jsx("p",{children:String(h)})]},l))})]})]}),[t]);return e.jsxs("article",{className:"page-container",children:[e.jsx(O,{onConnect:i}),e.jsxs("header",{className:"sl_page-header",children:[e.jsx("h1",{className:"sl_page-title",children:t("nip1_title")}),e.jsx("p",{className:"sl_page-intro",children:t("key_protocol_description")})]}),e.jsxs("main",{className:"sections-container",children:[e.jsx(j,{id:"overview",title:t("sections.overview.title"),icon:e.jsx(T,{className:"section-icon"}),isExpanded:p==="overview",onToggle:()=>N("overview"),children:q()}),e.jsx(j,{id:"event-structure",title:t("sections.event_structure.title"),icon:e.jsx(V,{className:"section-icon"}),isExpanded:p==="event-structure",onToggle:()=>N("event-structure"),children:J()}),e.jsx(j,{id:"relay-communication",title:t("sections.relay_communication.title"),icon:e.jsx(E,{className:"section-icon"}),isExpanded:p==="relay-communication",onToggle:()=>N("relay-communication"),children:Y()}),e.jsx(j,{id:"connection",title:t("sections.connection.title"),icon:e.jsx(E,{className:"sl_section-icon",size:24}),isExpanded:p==="connection",onToggle:()=>N("connection"),children:e.jsx("div",{className:"relay-control-section card",children:e.jsx(je,{ndk:a})})}),e.jsx(j,{id:"event-fetcher",title:t("event_fetcher"),icon:e.jsx(le,{className:"section-icon"}),isExpanded:p==="event-fetcher",onToggle:()=>N("event-fetcher"),children:e.jsxs("div",{className:"event-fetcher-section card",children:[e.jsxs("div",{className:"sl_example-box",children:[e.jsx("p",{className:"sl_content-text",children:t("example.try_it_out")}),e.jsxs("div",{className:"sl_example-container",children:[e.jsx("code",{className:"sl_code-example",children:B}),e.jsx("button",{type:"button",className:"sl_primary-button",onClick:H,children:t("example.use_this_id")})]})]}),e.jsxs("form",{onSubmit:G,className:"form-container",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"eventId",className:"form-label",children:t("labels.event_id")}),e.jsxs("div",{className:"input-container",children:[e.jsx("input",{id:"eventId",type:"text",value:r,onChange:l=>c(l.target.value),placeholder:t("placeholder.enter_event_id"),className:`form-input ${f===!0?"success":""} ${f===!1?"error":""}`,"aria-invalid":m?"true":"false","aria-describedby":m?"input-error":void 0}),r&&e.jsx("button",{type:"button",className:"clear-button",onClick:Z,"aria-label":t("buttons.clear_input"),children:"×"})]})]}),e.jsx("button",{type:"submit",disabled:g||!a||!r.trim(),className:"primary-button","aria-busy":g,children:g?e.jsxs(e.Fragment,{children:[e.jsx(E,{className:"animate-spin"}),t("buttons.fetching")]}):e.jsxs(e.Fragment,{children:[f===!0&&e.jsx(z,{className:"success-icon"}),f===!1&&e.jsx(M,{className:"error-icon"}),t("buttons.fetch_event")]})})]}),m&&e.jsxs(Ne,{variant:"destructive",className:"mt-4",children:[e.jsx(ye,{children:t("error")}),e.jsx(be,{children:m})]}),s&&e.jsxs("div",{className:"result-section",role:"region","aria-live":"polite",children:[e.jsx("h3",{children:t("fetched_event")}),e.jsx("div",{className:"code-example",children:e.jsx("pre",{children:JSON.stringify(s,null,2)})})]})]})})]}),e.jsx("footer",{className:"page-footer",children:e.jsx("a",{href:"https://github.com/nostr-protocol/nips/blob/master/01.md",target:"_blank",rel:"noopener noreferrer",className:"github-link",children:t("detailed_github_page")})})]})},Ee=t=>{const s={size:18,className:"field-icon"};switch(t){case"id":return e.jsx(T,{...s});case"pubkey":return e.jsx(ce,{...s});case"created_at":return e.jsx(oe,{...s});case"kind":return e.jsx(D,{...s});case"tags":return e.jsx(D,{...s});case"content":return e.jsx(V,{...s});case"sig":return e.jsx(F,{...s});default:return null}},Se=()=>{const[t,s]=o.useState(null),[n,a]=o.useState(""),i=async c=>{if(console.log(`Fetching NIP-01 Profile Event for pubkey: ${c}`),t)try{const g={kinds:[0],authors:[c],limit:1};console.log("Subscribing with filter:",g);const u=t.subscribe(g);u.on("event",m=>{console.log("Event received:",m),console.log("Full JSON:",JSON.stringify(m,null,2))}),u.on("eose",()=>{console.log("End of subscription events")}),u.on("close",m=>{console.error("Subscription closed with error:",m)})}catch(g){console.error("Error fetching event:",g)}else console.log("NDK instance is null")},r=async c=>{c.preventDefault(),i(n)};return e.jsxs("div",{className:"nip1-container",children:[e.jsx(O,{onConnect:s}),e.jsx("h2",{children:"NIP-01: Profile Event"}),e.jsx("div",{className:"input-form-container",children:e.jsxs("form",{onSubmit:r,children:[e.jsxs("label",{children:["Pubkey:",e.jsx("input",{type:"text",value:n,onChange:c=>a(c.target.value)})]}),e.jsx("button",{type:"submit",children:"Fetch Event"})]})})]})},Ie=()=>{const[t,s]=o.useState("home"),n=()=>{switch(t){case"home":return e.jsx(A,{});case"nip1":return e.jsx(we,{});case"nip2":return e.jsx(Se,{});default:return e.jsx(A,{})}};return e.jsx(ge,{children:e.jsxs("div",{className:"app",children:[e.jsx(xe,{setActivePage:s,activePage:t}),e.jsx("main",{className:"container",children:n()})]})})},Pe={welcome:"NIPs Explorer",nostr_intro:"Nostr is like a worldwide messaging system where anyone can participate. You can share messages and information with others, and here's what's special about it: it doesn't belong to anyone but works through a network of connected computers (relays).",protocol_basics:"Basics",protocol_basics_intro:"In Nostr, everything that happens is a message (event). Whether you post something, follow someone, or change your profile - everything is sent as a message with a specific format.",event_structure:{title:"Message Structure",id_desc:"A unique number for each message (like a fingerprint)",pubkey_desc:"Your public key (like your digital signature)",created_at_desc:"When the message was created",kind_desc:"What type of message it is (e.g., text, profile change)",tags_desc:"Additional information (e.g., who was mentioned)",content_desc:"The actual content of your message",sig_desc:"Your digital signature that proves the message is from you"},protocol_concepts:{title:"Important Basic Terms",nips_vs_kinds:"NIPs and Message Types",nips_vs_kinds_explanation:"NIPs are like building instructions for Nostr, and message types tell us what kind of message it is:"},nips_section:{title:"What are NIPs?",intro:"NIPs are like building instructions for Nostr. They explain how different parts of Nostr should work so all apps can talk to each other.",docs:"NIPs are documents with instructions for Nostr. They suggest new features, improve existing ones, or show the best way to implement something.",website:"Here you'll find simple explanations and examples of the different NIPs to help you better understand how Nostr works.",explanation:{title:"NIPs (Nostr Building Instructions)",description:"NIPs explain us:",points:["How new features should be built into Nostr","What rules all apps must follow","How information should be passed along correctly","How apps talk to each other"],example:"For example, NIP-01 is like the basic rulebook, and NIP-02 explains how contact lists work."},examples:{title:"NIP Examples:",nip01:"NIP-01: The Basic Rules",nip02:"NIP-02: How Contact Lists Work",nip03:"NIP-03: Timestamps for Messages",nip04:"NIP-04: Sending Private Messages"}},event_kinds:{title:"Message Types",explanation_title:"What are Message Types?",explanation_intro:"Every message in Nostr has a number that tells us what kind of message it is. This number determines:",purpose_points:["What's in the message (text, image, etc.)","How apps should display the message","How the message gets forwarded","How long the message is stored"],connection_to_nips:"The NIPs tell us what each number means. The most important numbers (0-3) were set in the first NIP.",ranges:{title:"Types of Messages and their Numbers (Kinds)",regular:"Regular messages (Kind 0-999): Your profile, texts, and your contacts",regular_replaceable:"Updatable messages (Kind 1000-9999): Only the latest version matters",ephemeral:"Temporary messages (Kind 10000-19999): These aren't stored permanently",parameterized:"Special messages (Kind 20000-29999): For specific applications"},common_title:"Commonly Used Message Types",metadata:"Your profile (name, picture, description)",text_note:"Regular text (like on Twitter)",recommend_server:"Recommendations for good relays",contacts:"Who you follow and which relays you use",direct_message:"Private messages to others",deletion:"Deleting old messages"},implementation_example:{title:"An Example:",content:"When a message has the number 1, every app knows: This is a regular text that everyone should be able to read - like a public post."},relays_section:{title:"What are Relays?",intro:"Relays are like post offices on the internet. They receive your messages and make sure they reach the right people. Anyone can run such a 'post office', and you can use several of them.",features:{decentralized:{title:"Open to All",description:"Anyone can run a relay"},redundant:{title:"Fail-safe",description:"Multiple relays ensure safety"},flexible:{title:"Freely Selectable",description:"You decide which relays to use"},scalable:{title:"Well Distributed",description:"Many relays share the work"}}},clients_section:{title:"What are Clients?",intro:"Clients are apps you can use to access Nostr. They help you write and read messages, edit your profile, and stay in touch with others.",types:{web:{title:"Web Apps",description:"Easy to use in your browser"},mobile:{title:"Phone Apps",description:"For your smartphone"},desktop:{title:"Computer Apps",description:"Programs for your PC"}}},summary:{title:"Summary",text:"Nostr is like a big network of post offices (relays) and apps (clients) through which you can communicate with others. The NIPs are like a rulebook that tells everyone how they can participate. This website helps you understand all of this better.",info_box:"Explore the different NIPs and learn how you can become part of Nostr."}},ze={nip1_title:"NIP-01: Basic Protocol",key_protocol:"Basic Protocol",key_protocol_description:"NIP-01 defines the fundamental concepts and mechanisms of the Nostr protocol. It is the cornerstone for all other NIPs and must be supported by all Nostr implementations.",sections:{connection:{title:"Relay Connection",description:"Connection status and control of relay servers"},overview:{title:"Overview",description:"NIP-01 establishes the foundational structure for all Nostr communication",core_aspects:{title:"Core Aspects",items:[{title:"Event Structure",description:"Standardized format for all Nostr data",icon:"file-text"},{title:"Cryptographic Security",description:"Schnorr signatures for authentication",icon:"shield"},{title:"Relay Protocol",description:"WebSocket-based client-server communication",icon:"server"},{title:"Pub/Sub Model",description:"Efficient real-time event transmission",icon:"zap"}]},points:["NIP-01 establishes the basic structure of events","Defines communication between clients and relays","Describes authentication and validation of events","Establishes the publish/subscribe model for data exchange"],implementation_goals:{title:"Implementation Goals",items:["Easy integration with existing systems","Maximum interoperability between clients","Minimal barriers for developers","Future-proof extensibility"]}},event_structure:{title:"Event Structure",description:"An event is the basic data unit in Nostr. Every action and piece of information is transmitted as an event.",fields:{id:{title:"ID",description:"A SHA-256 hash of all other event fields. Serves as a unique identifier.",technical:"Calculated from the serialization of event data (excluding 'id' and 'sig')"},pubkey:{title:"Public Key",description:"The event author's public key in hexadecimal format.",technical:"32-byte Schnorr key"},created_at:{title:"Creation Timestamp",description:"Unix timestamp of event creation in seconds.",technical:"Must be a valid Unix timestamp"},kind:{title:"Event Kind",description:"Numerical value defining the type of event.",examples:["0: Metadata (profile information)","1: Short text note","2: Recommended relay servers","3: Contacts","4: Encrypted direct message"]},tags:{title:"Tags",description:"List of tags for additional metadata and references.",common_tags:["e: Reference to other events","p: Reference to public keys","t: Thematic hashtags"]},content:{title:"Content",description:"The actual content of the event as text.",notes:["Can contain any text","Format depends on event kind","Can be encrypted"]},sig:{title:"Signature",description:"Cryptographic signature to verify authenticity.",technical:"64-byte Schnorr signature of the event ID value"}}},relay_communication:{title:"Relay Communication",description:"Communication between clients and relays occurs via WebSocket connections.",messages:{types:{title:"Message Types",EVENT:"Send a new event",REQ:"Request events with specific filters",CLOSE:"End a subscription",EOSE:"End of stored event stream"}},subscription:{title:"Subscription System",description:"Clients can subscribe to events using filters:",filter_options:["ids: Specific event IDs","authors: Events from specific authors","kinds: Specific event types","since: Events after a timestamp","until: Events up to a timestamp","limit: Maximum number of events"]}},event_validation:{title:"Event Validation",steps:["Verify event ID (correct calculation)","Validate signature","Check timestamp (not in future)","Verify required fields"]},best_practices:{title:"Best Practices",client_practices:["Connect to multiple relays for redundancy","Local caching of frequently used data","Implement exponential backoff for connection errors","Validate all received events"],relay_practices:["Efficient event storage and indexing","Implementation of rate limiting","Configurable event retention","Robust error handling"]}},example_usage:"Practical Example",example_usage_intro:"The following example shows how a typical Nostr event is structured:",example_usage_scenario:"Suppose a user wants to publish a public message:",example_message_content:"Hello Nostr world! 👋",example_explanation:"Breakdown of the example event:",example_id:"Unique ID of the event, calculated from event data",example_pubkey:"Author's public key",example_created_at:"Creation timestamp as Unix timestamp",example_kind:"Kind 1 indicates this is a public text note",example_tags:"Optional metadata and references",example_content:"The actual message text",example_sig:"Cryptographic signature for verification",event_fetcher:"Event Fetcher",fetched_event:"Fetched Event",fetch_event:"Fetch Event",detailed_github_page:"Detailed Documentation on GitHub",example:{try_it_out:"Try it out with this example event:",use_this_id:"Use this ID"},labels:{event_id:"Event ID"},buttons:{fetch_event:"Fetch Event",fetching:"Fetching...",clear_input:"Clear input"},placeholder:{enter_event_id:"Enter event ID..."},errors:{no_relay_connection:"No relay connection available",event_not_found:"Event not found",fetch_failed:"Failed to fetch event"},validation_errors:{invalid_id:"Invalid event ID",invalid_sig:"Invalid signature",future_timestamp:"Timestamp is in the future",missing_fields:"Missing required fields"}},Ce={nip2_title:"NIP-02",description:"This NIP describes the second implementation possibility for the Nostr protocol.",details:"Here is a detailed explanation of NIP-02.",example_usage:"Example Usage",example_usage_intro:"Here is a simple example of using NIP-02 in a protocol:",example_usage_scenario:"Imagine you want to create an event that represents a user action. The event might look like this:",example_message_content:"Example content for user action",example_explanation:"In this example:",example_id:"A unique identifier for the event.",example_pubkey:"The username or ID of the author.",example_created_at:"The creation date of the event in Unix timestamp.",example_kind:"The type of event, in this case, a user action.",example_tags:"A list of tags that categorize the event.",example_content:"The actual content of the user action.",example_sig:"A digital signature that ensures the integrity and authenticity of the event.",example_filters:"Clients can then use filters to subscribe to only specific events, e.g., all actions from 'user123' or all events with the tag 'action'.",event_fetcher:"Event Fetcher",fetched_event:"Fetched Event",detailed_github_page:"Detailed GitHub Page"},I={home:Pe,nip1:ze,nip2:Ce},Te={welcome:"NIPs Explorer",nostr_intro:"Nostr ist wie ein weltweites Nachrichtensystem, in dem jeder mitmachen kann. Du kannst Nachrichten und Informationen mit anderen austauschen, und das Besondere daran ist: Es gehört niemandem, sondern funktioniert durch ein Netzwerk von verbundenen Computern (Relays).",protocol_basics:"Grundlagen",protocol_basics_intro:"In Nostr ist alles, was passiert, eine Nachricht (Event). Ob du etwas postest, jemandem folgst oder dein Profil änderst - alles wird als Nachricht mit einer bestimmten Form verschickt.",event_structure:{title:"Aufbau einer Nachricht",id_desc:"Eine einzigartige Nummer für jede Nachricht (wie ein Fingerabdruck)",pubkey_desc:"Dein öffentlicher Schlüssel (wie deine digitale Unterschrift)",created_at_desc:"Wann die Nachricht erstellt wurde",kind_desc:"Um was für eine Nachricht es sich handelt (z.B. Text, Profiländerung)",tags_desc:"Zusätzliche Informationen (z.B. wer erwähnt wurde)",content_desc:"Der eigentliche Inhalt deiner Nachricht",sig_desc:"Deine digitale Unterschrift, die beweist, dass die Nachricht von dir ist"},protocol_concepts:{title:"Wichtige Grundbegriffe",nips_vs_kinds:"NIPs und Nachrichtenarten",nips_vs_kinds_explanation:"NIPs sind wie Bauanleitungen für Nostr, und Nachrichtenarten sagen uns, um welche Art von Mitteilung es sich handelt:"},nips_section:{title:"Was sind NIPs?",intro:"NIPs sind wie Bauanleitungen für Nostr. Sie erklären, wie verschiedene Teile von Nostr funktionieren sollen, damit alle Apps miteinander sprechen können.",docs:"NIPs sind Dokumente mit Anleitungen für Nostr. Sie schlagen neue Funktionen vor, verbessern bestehende oder zeigen den besten Weg, etwas umzusetzen.",website:"Hier findest du einfache Erklärungen und Beispiele zu den verschiedenen NIPs, damit du besser verstehst, wie Nostr funktioniert.",explanation:{title:"NIPs (Nostr Bauanleitungen)",description:"NIPs erklären uns:",points:["Wie neue Funktionen in Nostr eingebaut werden sollen","Welche Regeln alle Apps befolgen müssen","Wie Informationen richtig weitergegeben werden","Wie Apps miteinander sprechen"],example:"NIP-01 ist zum Beispiel wie das Grundregelwerk, und NIP-02 erklärt, wie Kontaktlisten funktionieren."},examples:{title:"NIP Beispiele:",nip01:"NIP-01: Die Grundregeln",nip02:"NIP-02: Wie Kontaktlisten funktionieren",nip03:"NIP-03: Zeitstempel für Nachrichten",nip04:"NIP-04: Private Nachrichten senden"}},event_kinds:{title:"Nachrichtenarten",explanation_title:"Was sind Nachrichtenarten?",explanation_intro:"Jede Nachricht in Nostr hat eine Nummer, die uns sagt, um was für eine Nachricht es sich handelt. Diese Nummer bestimmt:",purpose_points:["Was in der Nachricht steht (Text, Bild, etc.)","Wie Apps die Nachricht anzeigen sollen","Wie die Nachricht weitergeleitet wird","Wie lange die Nachricht gespeichert wird"],connection_to_nips:"In den NIPs steht, welche Nummer was bedeutet. Die wichtigsten Nummern (0-3) wurden gleich im ersten NIP festgelegt.",ranges:{title:"Arten von Nachrichten und ihre Nummern (Kinds)",regular:"Normale Nachrichten (Kind 0-999): Dein Profil, Texte und deine Kontakte",regular_replaceable:"Aktualisierbare Nachrichten (Kind 1000-9999): Hier zählt nur die neueste Version",ephemeral:"Temporäre Nachrichten (Kind 10000-19999): Diese werden nicht dauerhaft gespeichert",parameterized:"Spezielle Nachrichten (Kind 20000-29999): Für bestimmte Anwendungen"},common_title:"Häufig verwendete Nachrichtenarten",metadata:"Dein Profil (Name, Bild, Beschreibung)",text_note:"Normaler Text (wie bei Twitter)",recommend_server:"Empfehlungen für gute Relays",contacts:"Wem du folgst und welche Relays du nutzt",direct_message:"Private Nachrichten an andere",deletion:"Löschen von alten Nachrichten"},implementation_example:{title:"Ein Beispiel dazu:",content:"Wenn eine Nachricht die Nummer 1 hat, weiß jede App: Das ist ein normaler Text, den alle lesen können sollen - wie ein öffentlicher Post."},relays_section:{title:"Was sind Relays?",intro:"Relays sind wie Postämter im Internet. Sie nehmen deine Nachrichten entgegen und sorgen dafür, dass sie bei den richtigen Leuten ankommen. Jeder kann so ein 'Postamt' betreiben, und du kannst mehrere nutzen.",features:{decentralized:{title:"Für alle offen",description:"Jeder kann ein Relay betreiben"},redundant:{title:"Ausfallsicher",description:"Mehrere Relays sorgen für Sicherheit"},flexible:{title:"Frei wählbar",description:"Du entscheidest, welche Relays du nutzt"},scalable:{title:"Gut verteilbar",description:"Viele Relays teilen sich die Arbeit"}}},clients_section:{title:"Was sind Clients?",intro:"Clients sind Apps, mit denen du Nostr benutzen kannst. Sie helfen dir dabei, Nachrichten zu schreiben und zu lesen, dein Profil zu bearbeiten und mit anderen in Kontakt zu bleiben.",types:{web:{title:"Web-Apps",description:"Einfach im Browser nutzen"},mobile:{title:"Handy-Apps",description:"Für dein Smartphone"},desktop:{title:"Computer-Apps",description:"Programme für deinen PC"}}},summary:{title:"Zusammengefasst",text:"Nostr ist wie ein großes Netzwerk von Postämtern (Relays) und Apps (Clients), über das du mit anderen kommunizieren kannst. Die NIPs sind dabei wie ein Regelwerk, das allen sagt, wie sie mitmachen können. Diese Website hilft dir, all das besser zu verstehen.",info_box:"Entdecke die verschiedenen NIPs und lerne, wie du selbst Teil von Nostr werden kannst."}},De={nip1_title:"NIP-01: Grundprotokoll",key_protocol:"Grundprotokoll",key_protocol_description:"NIP-01 definiert die fundamentalen Konzepte und Mechanismen des Nostr-Protokolls. Es ist der Grundstein für alle weiteren NIPs und muss von allen Nostr-Implementierungen unterstützt werden.",sections:{connection:{title:"Relay-Verbindung",description:"Verbindungsstatus und Steuerung der Relay-Server"},overview:{title:"Überblick",description:"NIP-01 etabliert die grundlegende Struktur für alle Nostr-Kommunikation",core_aspects:{title:"Kernaspekte",items:[{title:"Event-Struktur",description:"Standardisiertes Format für alle Nostr-Daten",icon:"file-text"},{title:"Kryptographische Sicherheit",description:"Schnorr-Signaturen zur Authentifizierung",icon:"shield"},{title:"Relay-Protokoll",description:"WebSocket-basierte Client-Server-Kommunikation",icon:"server"},{title:"Pub/Sub-Modell",description:"Effiziente Echtzeitübertragung von Events",icon:"zap"}]},points:["NIP-01 legt die grundlegende Struktur von Events fest","Definiert die Kommunikation zwischen Clients und Relays","Beschreibt die Authentifizierung und Validierung von Events","Etabliert das Publish/Subscribe-Modell für Datenaustausch"],implementation_goals:{title:"Implementierungsziele",items:["Einfache Integration in bestehende Systeme","Maximale Interoperabilität zwischen Clients","Minimale Einstiegshürden für Entwickler","Zukunftssichere Erweiterbarkeit"]}},event_structure:{title:"Event-Struktur",description:"Ein Event ist die grundlegende Dateneinheit in Nostr. Jede Aktion und jede Information wird als Event übertragen.",fields:{id:{title:"ID",description:"Ein SHA-256-Hash aller anderen Event-Felder. Dient als eindeutiger Identifier.",technical:"Wird aus der Serialisierung der Event-Daten (ohne 'id' und 'sig') berechnet"},pubkey:{title:"Public Key",description:"Der öffentliche Schlüssel des Event-Autors in hexadezimaler Form.",technical:"32-Byte Schnorr-Schlüssel"},created_at:{title:"Erstellungszeitpunkt",description:"Unix-Timestamp der Event-Erstellung in Sekunden.",technical:"Muss ein gültiger Unix-Timestamp sein"},kind:{title:"Event-Art",description:"Numerischer Wert, der den Typ des Events definiert.",examples:["0: Metadaten (Profilinformationen)","1: Kurznachricht","2: Empfohlene Relay-Server","3: Kontakte","4: Verschlüsselte Direktnachricht"]},tags:{title:"Tags",description:"Liste von Tags für zusätzliche Metadaten und Verknüpfungen.",common_tags:["e: Verweis auf andere Events","p: Verweis auf Public Keys","t: Thematische Hashtags"]},content:{title:"Inhalt",description:"Der eigentliche Inhalt des Events als Text.",notes:["Kann beliebigen Text enthalten","Format hängt vom Event-Kind ab","Kann auch verschlüsselt sein"]},sig:{title:"Signatur",description:"Kryptographische Signatur zur Verifizierung der Authentizität.",technical:"64-Byte Schnorr-Signatur des Event-ID-Wertes"}}},relay_communication:{title:"Relay-Kommunikation",description:"Die Kommunikation zwischen Clients und Relays erfolgt über WebSocket-Verbindungen.",messages:{types:{title:"Nachrichtentypen",EVENT:"Senden eines neuen Events",REQ:"Anfrage nach Events mit bestimmten Filtern",CLOSE:"Beenden einer Subscription",EOSE:"Ende des gespeicherten Event-Streams"}},subscription:{title:"Subscription-System",description:"Clients können Events über Filter abonnieren:",filter_options:["ids: Spezifische Event-IDs","authors: Events von bestimmten Autoren","kinds: Bestimmte Event-Typen","since: Events nach einem Zeitpunkt","until: Events bis zu einem Zeitpunkt","limit: Maximale Anzahl an Events"]}},event_validation:{title:"Event-Validierung",steps:["Überprüfung der Event-ID (korrekte Berechnung)","Validierung der Signatur","Prüfung des Timestamps (nicht in der Zukunft)","Verifizierung der erforderlichen Felder"]},best_practices:{title:"Beste Praktiken",client_practices:["Verbindung zu mehreren Relays für Redundanz","Lokales Caching häufig genutzter Daten","Implementierung von Exponential Backoff bei Verbindungsfehlern","Validierung aller empfangenen Events"],relay_practices:["Effiziente Event-Speicherung und -Indizierung","Implementierung von Rate-Limiting","Konfigurierbare Event-Retention","Robuste Fehlerbehandlung"]}},example_usage:"Praktisches Beispiel",example_usage_intro:"Im folgenden Beispiel sehen Sie, wie ein typisches Nostr-Event strukturiert ist:",example_usage_scenario:"Angenommen, ein Benutzer möchte eine öffentliche Nachricht veröffentlichen:",example_message_content:"Hallo Nostr-Welt! 👋",example_explanation:"Aufschlüsselung des Beispiel-Events:",example_id:"Eindeutige ID des Events, berechnet aus den Event-Daten",example_pubkey:"Öffentlicher Schlüssel des Autors",example_created_at:"Erstellungszeitpunkt als Unix-Timestamp",example_kind:"Kind 1 zeigt an, dass es sich um eine öffentliche Textnachricht handelt",example_tags:"Optionale Metadaten und Verknüpfungen",example_content:"Der eigentliche Nachrichtentext",example_sig:"Kryptographische Signatur zur Verifizierung",event_fetcher:"Event-Abfrage",fetched_event:"Abgerufenes Event",fetch_event:"Event abrufen",detailed_github_page:"Ausführliche Dokumentation auf GitHub",example:{try_it_out:"Probieren Sie es mit diesem Beispiel-Event aus:",use_this_id:"Diese ID verwenden"},labels:{event_id:"Event ID"},buttons:{fetch_event:"Event abrufen",fetching:"Wird abgerufen...",clear_input:"Eingabe löschen"},placeholder:{enter_event_id:"Event ID eingeben..."},errors:{no_relay_connection:"Keine Relay-Verbindung verfügbar",event_not_found:"Event nicht gefunden",fetch_failed:"Abruf des Events fehlgeschlagen"},validation_errors:{invalid_id:"Ungültige Event-ID",invalid_sig:"Ungültige Signatur",future_timestamp:"Zeitstempel liegt in der Zukunft",missing_fields:"Fehlende Pflichtfelder"}},Ae={nip2_title:"NIP-02",description:"Dieses NIP beschreibt die zweite Implementierungsmöglichkeit für das Nostr-Protokoll.",details:"Hier ist eine detaillierte Erklärung von NIP-02.",example_usage:"Beispiel für die Verwendung",example_usage_intro:"Hier ist ein einfaches Beispiel für die Verwendung von NIP-02 in einem Protokoll:",example_usage_scenario:"Stell dir vor, du möchtest ein Ereignis erstellen, das eine Benutzeraktion darstellt. Das Ereignis könnte so aussehen:",example_message_content:"Beispielinhalt für Benutzeraktion",example_explanation:"In diesem Beispiel:",example_id:"Eine eindeutige Kennung für das Ereignis.",example_pubkey:"Der Benutzername oder die ID des Autors.",example_created_at:"Das Erstellungsdatum des Ereignisses in Unix-Zeitstempel.",example_kind:"Die Art des Ereignisses, in diesem Fall eine Benutzeraktion.",example_tags:"Eine Liste von Tags, die das Ereignis kategorisieren.",example_content:"Der eigentliche Inhalt der Benutzeraktion.",example_sig:"Eine digitale Signatur, die die Integrität und Authentizität des Ereignisses sicherstellt.",example_filters:"Clients können dann Filter verwenden, um nur bestimmte Ereignisse zu abonnieren, z.B. alle Aktionen von 'user123' oder alle Ereignisse mit dem Tag 'action'.",event_fetcher:"Event Fetcher",fetched_event:"Fetched Event",detailed_github_page:"Detaillierte GitHub-Seite"},P={home:Te,nip1:De,nip2:Ae},Re={en:{home:I.home,nip1:I.nip1,nip2:I.nip2},de:{home:P.home,nip1:P.nip1,nip2:P.nip2}};me.use(pe).use(de).init({resources:Re,fallbackLng:"en",interpolation:{escapeValue:!1},debug:!1,defaultNS:"home",ns:["home","nip1","nip2"],detection:{order:["localStorage","navigator"],caches:["localStorage"]}});he(document.getElementById("root")).render(e.jsx(o.StrictMode,{children:e.jsx(Ie,{})}));
